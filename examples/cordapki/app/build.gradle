buildscript {
    ext {
        kotlin_version = "1.2.71"
        corda_release_version = "4.7"
    }

    repositories {
        mavenCentral()
        maven { url "https://software.r3.com/artifactory/corda-releases" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.71"
        classpath "net.corda.plugins:cordapp:5.0.12"
        classpath "net.corda.plugins:cordformation:5.0.12"
        classpath "net.corda.plugins:quasar-utils:5.0.12"

    }
}

plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.2.71"
}

apply plugin: 'kotlin'
apply plugin: "net.corda.plugins.cordapp"
apply plugin: "net.corda.plugins.cordformation"
apply plugin: "net.corda.plugins.quasar-utils"
//apply plugin: 'org.junit.platform.gradle.plugin'

//name = "Corda PKI"

//    apply plugin: "kotlin"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group "mycorda.app.corda-pki"
    version "0.0.1"

    repositories {
        mavenCentral()
        maven { url "https://software.r3.com/artifactory/corda" }
        maven { url "https://software.r3.com/artifactory/corda-lib" }
        maven { url "https://repo.gradle.org/gradle/libs-releases" }
        maven { url "https://jitpack.io" }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            languageVersion = "1.2"
            apiVersion = "1.2"
            jvmTarget = "1.8"
            javaParameters = true
        }
    }

    jar {
        // Make JAR checksums hash repeatable
        preserveFileTimestamps = false
        reproducibleFileOrder = true
    }




dependencies {
    cordaCompile "net.corda:corda-core:4.7"
    cordaRuntime "net.corda:corda-node-api:4.7"
    cordaRuntime "net.corda:corda:4.7"

    implementation "net.corda:corda-test-utils:4.7"
    implementation "net.corda:corda-node-driver:4.7"

    implementation 'com.github.mycordaapp:registry:0.0.2'

}


task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ["jar"]) {
    //directory "./deployment/corda"
    nodeDefaults {

    }

    node {
        name "O=Notary, L=London, C=GB"
        notary = [validating: false]
        p2pAddress("notary:60000")

        rpcSettings {
            address 'notary:60002'
            adminAddress 'notary:60003'
        }
        sshdPort 60005

        projectCordapp {
            deploy = false
        }
        cordapps.clear()
    }

    node {
        name "O=Alice Pty, L=Melbourne, C=AU"
        p2pAddress("alice:10002")

        rpcSettings {
            address 'alice:10003'
            adminAddress 'alice:10004'
        }
        sshdPort 10005
        rpcUsers = [[user: "testuser", "password": "password", "permissions": ["ALL"]]]
        devMode true
        runSchemaMigration = true

    }
    node {
        name "O=Bob Ltd, L=Milton Keynes, C=GB"
        p2pAddress("bob:10012")

        rpcSettings {
            address 'bob:10013'
            adminAddress 'bob:10014'
        }
        sshdPort 10015
        rpcUsers = [[user: "testuser", "password": "password", "permissions": ["ALL"]]]
        devMode true
        runSchemaMigration = true
    }

}



//dependencies {
//    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.71"
//
//    implementation "net.corda:corda-test-utils:4.7"
//    implementation "net.corda:corda-node-driver:4.7"
//
//    implementation project(":contracts")
//
//    // spek v2
//    testCompile("org.spekframework.spek2:spek-dsl-jvm:2.0.0")
//    testCompile("org.spekframework.spek2:spek-runner-junit5:2.0.0")
//}
